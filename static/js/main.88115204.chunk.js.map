{"version":3,"sources":["components/Title.js","components/SearchForm.js","components/Movie.js","components/MoviesList.js","pages/Home.js","components/ButtonBackToHome.js","pages/Details.js","pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Title","children","className","SearchForm","state","inputMovie","_handleChange","e","setState","target","value","_handleSubmit","preventDefault","fetch","then","res","json","results","Search","totalResults","console","log","props","onResults","onSubmit","this","type","onChange","placeholder","Component","Movie","id","poster","title","year","to","src","alt","MoviesList","movies","map","movie","key","imdbID","Year","Poster","Home","usedSearch","_handlerResults","length","_renderResults","href","ButtonBackToHome","Detail","window","history","back","movieId","match","params","_fetchMovie","Actors","Metascore","Plot","NotFound","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.88115204.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Title = ({ children }) => (\n  <h1 className=\"title has-text-white\">{children}</h1>\n)","import React, { Component } from 'react';\n\nconst API_KEY = '4287ad07';\n\nexport class SearchForm extends Component {\n  state = {\n    inputMovie: ''\n  }\n\n  _handleChange = (e) => {\n    this.setState({ inputMovie: e.target.value })\n  }\n  _handleSubmit = (e) => {\n    e.preventDefault();\n    const { inputMovie } = this.state\n    fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&s=${inputMovie}`)\n    .then(res => res.json())\n    .then(results => {\n      const { Search = [], totalResults = 0 } = results\n      console.log(Search, totalResults)\n      this.props.onResults(Search)\n    })\n  }\n  render () {\n    return (\n      <form onSubmit={this._handleSubmit}>\n        <div className=\"field has-addons\">\n          <div className=\"control\">\n            <input \n              className=\"input\"\n              type=\"text\"\n              onChange={ this._handleChange }\n              placeholder=\"Movie to search\"/>\n          </div>\n          <div className=\"control\">\n            <button className=\"button is-info\">\n              Search\n            </button>\n          </div>\n        </div>\n      </form>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Link } from 'react-router-dom'\n\nexport class Movie extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    title: PropTypes.string,\n    year: PropTypes.string,\n    poster: PropTypes.string\n  }\n\n  render() {\n    const { id, poster, title, year } = this.props\n\n  return (\n    <Link to={`/detail/${id}`} className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img src={poster} alt={title}/>\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-content\">\n            <p className=\"title is-4\">{title}</p>\n            <p className=\"subtitle is-6\">{year}</p>\n          </div>\n        </div>\n      </div>\n    </Link>\n    )\n  }\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Movie } from './Movie'\n\n\nexport class MoviesList extends Component {\n  static propTypes = {\n    movies: PropTypes.array\n  }\n\n  render() {\n    const { movies } = this.props\n    return (\n      <div className='moviesList'>\n        {\n          movies.map(movie => {\n            return(\n              <div key={movie.imdbID} className=\"moviesList-item\">\n                <Movie\n                  id={movie.imdbID}\n                  title={movie.Title}\n                  year={movie.Year}\n                  poster={movie.Poster}\n                />\n              </div>\n            )\n          })\n        }\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Title } from '../components/Title';\nimport { SearchForm } from '../components/SearchForm';\nimport { MoviesList } from '../components/MoviesList'\n\nexport class Home extends Component {\n  state = { usedSearch: false, results: [] }\n\n  _handlerResults = (results) => {\n    this.setState({ results, usedSearch: true })\n  }\n\n  _renderResults () {\n    return this.state.results.length === 0\n    ? <p>Sorry! Results not found</p>\n    : <MoviesList movies={this.state.results}/>\n  }\n  render() {\n    return (\n      <div className=\"homePage\">\n        <Title>Search Movies</Title>\n        <div className=\"SearchForm-wrapper\">\n          <SearchForm onResults={this._handlerResults}/>\n        </div>\n        {\n          this.state.usedSearch\n          ? this._renderResults()\n          : <small className=\"has-text-white\">Use the form to search a movie</small>\n        }\n        <a className=\"has-text-success copy\" href=\"https://github.com/oriananohemi\">oriananohemi</a>\n      </div>\n    )\n  }\n  \n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const ButtonBackToHome = () => (\n  <Link\n    className=\"button is-info\"\n    to=\"/\">\n    Volver a la portada\n  </Link>\n)","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ButtonBackToHome } from '../components/ButtonBackToHome'\n\nconst API_KEY = '4287ad07';\n\nexport class Detail extends Component {\n  static propTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.object,\n      isExact: PropTypes.bool,\n      path: PropTypes.string,\n      url: PropTypes.string\n    })\n  }\n\n  state = { movie: {} }\n\n  _fetchMovie ({ id }) {\n    fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&i=${id}`)\n    .then(res => res.json())\n    .then(movie => {\n      console.log({movie})\n      this.setState({movie})\n    })\n  }\n\n  _goBack() {\n    window.history.back()\n  }\n\n  componentDidMount () {\n    const { movieId } = this.props.match.params\n    this._fetchMovie({ id: movieId })\n  }\n  render() {\n    const { Title, Poster, Actors, Metascore, Plot } = this.state.movie\n\n    return (\n      <div className=\"details-page\">\n        <div className=\"button-goBack\">\n          <ButtonBackToHome />\n        </div>\n        <div className=\"movie-details\">\n          <div className=\"card-image\">\n            <figure className=\"image is-4by3\">\n              <img src={Poster} alt={Title}/>\n            </figure>\n          <h1 className=\"title is-4\">{Title}</h1>\n          </div>\n          <h3 className=\"subtitle is-6\"><span className=\"has-text-weight-bold\">Actors:</span> { Actors }</h3>\n          <h3 className=\"subtitle is-6\"><span className=\"has-text-weight-bold\">Score:</span> { Metascore }</h3>\n          <p className=\"subtitle is-6\"><span className=\"has-text-weight-bold\">Synopsis: </span> { Plot }</p>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport { ButtonBackToHome } from '../components/ButtonBackToHome';\n\nexport const NotFound = () => (\n  <div>\n    <h1 className=\"title\">404</h1>\n    <h2>No existe la pagina</h2>\n    <ButtonBackToHome />\n  </div>\n)","import React, {Component} from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport { Home } from './pages/Home'\nimport { Detail } from './pages/Details';\nimport { NotFound } from './pages/NotFound'\n\nimport './App.css';\nimport 'bulma/css/bulma.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/buscador-peliculas/' component={Home} />\n          <Route path='/detail/:movieId' component={Detail} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}